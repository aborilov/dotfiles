[general]
ui = ttyui
accounts = AborilovPavel
/* pythonfile=~/.mutt/offlineimap.py */
fsync = False

[Account AborilovPavel]
localrepository = AborilovPavel-Local
remoterepository = AborilovPavel-Remote
status_backend = sqlite
/* postsynchook = notmuch new */

[Repository AborilovPavel-Local]
type = Maildir
localfolders = ~/.mail/aborilov.com
nametrans = lambda folder: {'drafts':  '[Gmail]/Drafts',
                            'sent':    '[Gmail]/Sent Mail',
                            'flagged': '[Gmail]/Starred',
                            'trash':   '[Gmail]/Trash',
                            'spam':    '[Gmail]/Spam',
                            'archive': '[Gmail]/All Mail',
                            }.get(folder, folder)

[Repository AborilovPavel-Remote]
maxconnections = 1
type = Gmail
remoteuser = aborilov@gmail.com
remotepass = 
realdelete = no
nametrans = lambda folder: {'[Gmail]/Drafts':    'drafts',
                            '[Gmail]/Sent Mail': 'sent',
                            '[Gmail]/Starred':   'flagged',
                            '[Gmail]/Trash':     'trash',
                            '[Gmail]/Spam':      'spam',
                            '[Gmail]/All Mail':  'archive',
                            }.get(folder, folder)
folderfilter = lambda folder: folder not in ['[Gmail]/Important',
                                             ]
sslcacertfile = /etc/ssl/certs/ca-certificates.crt

[mbnames]
enable = yes
filename = ~/.mutt/mailboxes
header = "mailboxes "
peritem = "+%(accountname)s/%(foldername)s"
sep = " "
footer = "\n"

# [Account Simple]
# localrepository = Simple-Local
# remoterepository = Simple-Remote
# status_backend = sqlite
# postsynchook = notmuch new
# 
# [Repository Simple-Local]
# type = Maildir
# localfolders = ~/.mail/simple
# nametrans = lambda folder: {'drafts':  '[Gmail]/Drafts',
#                             'sent':    '[Gmail]/Sent Mail',
#                             'flagged': '[Gmail]/Starred',
#                             'trash':   '[Gmail]/Trash',
#                             'archive': '[Gmail]/All Mail',
#                             }.get(folder, folder)
# 
# [Repository Simple-Remote]
# maxconnections = 1
# type = Gmail
# remoteuser = sjl@simple.com
# remotepasseval = get_keychain_pass(account="sjl@simple.com", server="imap.gmail.com")
# realdelete = no
# nametrans = lambda folder: {'[Gmail]/Drafts':    'drafts',
#                             '[Gmail]/Sent Mail': 'sent',
#                             '[Gmail]/Starred':   'flagged',
#                             '[Gmail]/Trash':     'trash',
#                             '[Gmail]/All Mail':  'archive',
#                             }.get(folder, folder)
# folderfilter = lambda folder: folder not in ['[Gmail]/Trash',
#                                              '[Gmail]/Important',
#                                              '[Gmail]/Spam',
#                                              ]

